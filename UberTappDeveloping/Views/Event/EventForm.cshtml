@model UberTappDeveloping.ViewModels.EventFormViewModel

@*<style></style>*@
<link href="~/Content/KotsDisplay.css" rel="stylesheet" />
@*<style></style>*@

<body id="EventFormView" class="body">
    <div class="container-fluid">
        @if (Model.Event.Id == 0)
        {
            <div id="TitleContainer" class="row">
                <div class="form-group col-md-12">
                    <img id="VenueSignImg" src="~/Helper/Images/8.png" alt="Alternate Text" />
                    <img id="AddAnEventImg" src="~/Helper/Images/Add_an_Event.png" alt="Alternate Text" />
                    <img id="VenueSignImg" src="~/Helper/Images/8.png" alt="Alternate Text" />
                </div>
            </div>
        }
        else
        {
            <div id="TitleContainer" class="row">
                <div class="form-group col-md-12">
                    <img id="VenueSignImg" src="~/Helper/Images/8.png" alt="Alternate Text" />
                    <img id="EditAnEventImg" src="~/Helper/Images/Edit_an_Event.png" alt="Alternate Text" />
                <img id="VenueSignImg" src="~/Helper/Images/8.png" alt="Alternate Text" />
                </div>
            </div>
        }

        <div id="FormArea" class="row">
            <div class="form-group col-md-6">
                @using (Html.BeginForm(Model.ActionName, "Event"))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(v => v.Event.Id)

                    <div class="form-group">
                        @Html.LabelFor(v => v.Event.Date)
                        @Html.TextBoxFor(v => v.Event.Date, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", value = "" })
                        @Html.ValidationMessageFor(v => v.Event.Date)
                    </div>

                    <div id="TextArea" class="form-group">
                        @Html.LabelFor(v => v.Event.Description)
                        @Html.TextBoxFor(v => v.Event.Description, new { @class = "form-control", autofocus = true })
                        @Html.ValidationMessageFor(v => v.Event.Description)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(v => v.Event.VenueId)
                        @Html.DropDownListFor(v => v.Event.VenueId, new SelectList(Model.Venues, "Id", "Name"), " --- Select --- ", new { @class = "form-control" })
                        @Html.ValidationMessageFor(v => v.Event.VenueId)
                    </div>

                    <div id="BtnArea" class="form-group">
                        <button type="submit" class="btn btn-primary">Save</button>
                        @if (Model.Event.Id != 0)
                        {
                            <button id="deleteBtn" js-event-id="@Model.Event.Id" class="btn btn-danger">Cancel</button>
                        }
                    </div>
                }
            </div>
            <div class="form-group col-md-6">
                <img id="DrunkUserImg" src="~/Helper/Images/9.png" alt="Alternate Text" />
            </div>
        </div>
    </div>
</body>


@section scripts
    {

    @Scripts.Render("~/bundles/jqueryval")


    <script>

        $(document).ready(function () {


            //empty date value when user wants to create new Event
            if ($("#Event_Date").val() == "0001-01-01") {
                $("#Event_Date").val("");
            }


            $("#deleteBtn").click(function (e) {
                e.preventDefault();
                console.log($(e.target));

                bootbox.confirm({
                    title: "Cancel Event?",
                    message: "Are you sure you want to cancel this Event? This cannot be undone.",
                    buttons: {
                        cancel: {
                            label: '<i class="fa fa-times"></i> Cancel'
                        },
                        confirm: {
                            label: '<i class="fa fa-check"></i> Confirm'
                        }
                    },
                    callback: function (result) {
                        console.log('This was logged in the callback: ' + result);
                        if (result) {
                            $.ajax({
                                url: '/api/events/' + $(e.target).attr("js-event-id"),
                                type: 'DELETE'

                            }).done(function () {
                                console.log("done");
                                window.location.replace("/Event/venueownerevents");
                            }).fail(function () {
                                console.log("fail");
                            });
                        }
                    }
                });





            });





        });



    </script>
}