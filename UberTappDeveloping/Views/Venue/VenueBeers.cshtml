@model UberTappDeveloping.ViewModels.VenueBeersViewModel
@{
    ViewBag.Title = "VenueBeers";
    @Styles.Render("~/Content/VenueBeers.css");

}

<body id="VenueBeersView" class="body">

    <div id="TitleContainer" class="row">
        <div class="form-group col-md-12">
            <img id="FrozenGlassImg" src="~/Helper/Images/10.png" alt="Alternate Text" />
            <img id="AvailableBeersImg" src="~/Helper/Images/Available_Beers.png" alt="Alternate Text" />
            <img id="FrozenGlassImg" src="~/Helper/Images/10.png" alt="Alternate Text" />
        </div>
    </div>

    <div class="container-main">

        <div class="venues">
            <h1>My Venues</h1>
            <div class="myVenues">

                @foreach (var venue in Model.MyVenues)
                {
                    <div class="radio">
                        <label>
                            <input type="radio" name="venue" value="@venue.Id" class="venue-input">
                            @venue.Name
                        </label>
                        <a href="@Url.Action("VenueProfile","venue",new {id = venue.Id })" class="btn btn-primary">Profile</a>
                    </div>
                }

            </div>
        </div>

        <div class="origin">
            <div class="searchBeers">
                <input type="text" value="" placeholder="Search by Beer Name" />
                <h1>All Beers</h1>
            </div>
            <div class="all dropzone">

                @foreach (var beer in Model.AllBeers)
                {
                    <div class="box">
                        <img src="~/Content/Images/beer-logo-1.jpg" alt="@beer.Name" />
                        <span>@beer.Name</span>
                        <input type="hidden" name="beer" value="@beer.Id" />
                        <input type="number" name="price" value="" min="0" class="price" />
                        <i class="fa fa-eur"></i>
                    </div>
                }


            </div>

        </div>

        <div class="destination">
            <h1>Available Beers</h1>
            <div class="selected dropzone">

            </div>
        </div>

        <form>
            <input class="bg-primary" id="submit" type="submit" value="Save" />
        </form>

    </div>
</body>






@section scripts
{


    <script>

        $(document).ready(function () {

            let dragged;
            let items = document.querySelectorAll('.box');
            items.forEach(function (item) {
                console.log(item);

                $(item).attr("draggable", "true");//make divs draggable



            });



            document.addEventListener("dragstart", function (event) {
                // store a ref. on the dragged elem
                dragged = event.target;
                console.log(event.target);
                // make it half transparent
                event.target.style.opacity = 0.5;


            }, false);

            document.addEventListener("dragend", function (event) {
                // reset the transparency
                event.target.style.opacity = "";
            }, false);

            document.addEventListener("dragenter", function (event) {
                // highlight potential drop target when the draggable element enters it
                console.log(event.target.classList.value);

                if (event.target.classList.contains("dropzone")) {
                    event.target.style.background = "coral";
                    $(event.target).css("border-color", "#ff6b66");
                    console.log($(event.target).parents(".origin").children(".searchBeers").children("h1"));
                    $(event.target).parents(".origin").children(".searchBeers").children("h1").css("color", "coral");
                    $(event.target).parents(".destination").children("h1").css("color", "coral");
                }
            }, false);


            document.addEventListener("dragleave", function (event) {
                // reset background of potential drop target when the draggable element leaves it
                if (event.target.classList.contains("dropzone")) {
                    event.target.style.background = "";
                    event.target.style.borderColor = "";
                    $(event.target).parents(".origin").children(".searchBeers").children("h1").css("color", "black");
                    $(event.target).parents(".destination").children("h1").css("color", "black");
                }

            }, false);


            document.addEventListener("dragover", function (event) {
                // prevent default to allow drop
                event.preventDefault();
            }, false);


            document.addEventListener("drop", function (event) {
                // prevent default action (open as link for some elements)
                event.preventDefault();
                console.log($(event.target).parent());

                // move dragged elem to the selected drop target
                if (event.target.classList.contains('dropzone')) {

                    event.target.style.background = "";
                    event.target.style.borderColor = "";
                    $(event.target).parents(".origin").children(".searchBeers").children("h1").css("color", "black");
                    $(event.target).parents(".destination").children("h1").css("color", "black");
                    dragged.parentNode.removeChild(dragged);
                    event.target.appendChild(dragged);
                }
            }, false);


            //submit form
            $("form").submit(function (e) {
                e.preventDefault();


                var radioVal = $("input[type='radio']:checked").val();
                console.log(radioVal);

                var beerIds = $(".selected input[name='beer']");
                console.log(beerIds);

                var beerArr = [];

                for (var i = 0; i < beerIds.length; i++) {
                    console.log(beerIds[i].value);
                    beerArr.push(beerIds[i].value);
                }

                var pricesHtml = $(".selected .price");

                var pricesArr = [];

                for (var price of pricesHtml) {
                    console.log(price.value);
                    pricesArr.push(price.value);
                }

                console.log(pricesArr);
                console.log(beerArr.map(Number));

                var model = {
                    beersArray: beerArr.map(Number),
                    venueId: parseInt(radioVal),
                    pricesArray: pricesArr.map(Number)
                };

                console.log(model);

                $.ajax({
                    url: "/api/Venues",
                    method: "POST",
                    data: model,
                })
                    .done(function (response) {
                        bootbox.alert({
                            message: "Beers Saved Succesfully!",
                            size: 'small'
                        });
                    })
                    .fail(function (e) {
                        console.log(e);
                        bootbox.alert(e.responseJSON.message);
                    });

            });

            let allBeers;
            $.get("/api/Venues/", function (allBeers) {//get all beers and save them to session storage
                sessionStorage.setItem("allBeers", JSON.stringify(allBeers));
                console.log("mpika");
            })
                .done(function () {
                    allBeers = JSON.parse(sessionStorage.getItem("allBeers"));
                    VenueClick();
                    SearchBeers();
                });

            function VenueClick() {
                $(".myVenues").on("click", ".venue-input", function (e) {
                    console.log(e);
                    console.log($("input[type='radio']:checked").val())
                    console.log($("input[type='radio']:checked").parent());
                    console.log($(".radio label"));
                    for (var label of $(".radio label")) {//make venues color black
                        label.style.color = "black";
                    }
                    $("input[type='radio']:checked").parent().css("color", "#0410B8"); //make selected venue color blue

                    $(".all").text(" "); //empty .all beers

                    allBeers.forEach(function (beer) {//append all beers to .all
                        var div = `<div draggable="true" class="box">
                                                         <img src="/Content/Images/beer-logo-1.jpg"  alt=${beer.name} />
                                                         <span>${beer.name}</span>
                                                         <input type="hidden" name="beer" value="${beer.id}" />
                                                         <input type="number" name="price" value="" min="0" class="price" />
                                                         <i class="fa fa-eur"></i>
                                                  </div>`;
                        $(".all").append(div);
                    });


                    $.get("/api/Venues/" + $("input[type='radio']:checked").val(), function (venueBeers) {//get available venue beers
                        console.log(venueBeers);

                        if (venueBeers.length != 0) {//if available beers exist remove them from all beers
                            let availableBeersId = [];

                            for (var beer of venueBeers) {
                                availableBeersId.push(beer.id.toString());
                            }
                            console.log(availableBeersId);
                            console.log($(".all").children());
                            for (var div of $(".all").children()) {

                                let inputValue = $(div).children("input").val();

                                if (availableBeersId.includes(inputValue.toString())) {
                                    $(div).remove(); //remove available beers from all beers
                                };


                            };
                        };

                        $(".selected").text(" ");//empty .selected beers
                        venueBeers.forEach(ViewBeer); //add available beers from DB to .selected

                    })
                });
            }

            function ViewBeer(beer) {
                var div = `<div draggable="true" class="box">
                                                 <img src="/Content/Images/beer-logo-1.jpg"  alt=${beer.name} />
                                                 <span>${beer.name}</span>
                                                 <input type="hidden" name="beer" value="${beer.id}" />
                                                 <input type="number" name="price" value="${beer.price}" min="0" class="price" />
                                                 <i class="fa fa-eur"></i>
                                          </div>`;

                $(".selected").append(div);
            }


            function SearchBeers() {//filter .all beers
                $(".searchBeers input").on("keyup", function () {

                    var value = $(this).val().toLowerCase();

                    $($(".all .box span")).filter(function () {

                        $(this).parent().toggle($(this).text().toLowerCase().indexOf(value) > -1);

                    });
                });
            };





        });




    </script>



}



